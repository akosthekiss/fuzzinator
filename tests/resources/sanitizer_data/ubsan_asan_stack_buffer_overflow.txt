crashme.cpp:74:15: runtime error: index 102 out of bounds for type 'int [100]'
SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior crashme.cpp:74:15 in 
=================================================================
==6465==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffee9662758 at pc 0x00010659fa97 bp 0x7ffee9662590 sp 0x7ffee9662588
READ of size 4 at 0x7ffee9662758 thread T0
    #0 0x10659fa96 in stack_buffer_overflow(int)+0x3a6 (crashme:x86_64+0x100002a96)
    #1 0x1065a0289 in main+0x369 (crashme:x86_64+0x100003289)
    #2 0x7fff72dd7cc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)

Address 0x7ffee9662758 is located in stack of thread T0 at offset 440 in frame
    #0 0x10659f6ff in stack_buffer_overflow(int)+0xf (crashme:x86_64+0x1000026ff)

  This frame has 1 object(s):
    [32, 432) 'stack_array' <== Memory access at offset 440 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow (crashme:x86_64+0x100002a96) in stack_buffer_overflow(int)+0x3a6
Shadow bytes around the buggy address:
  0x1fffdd2cc490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1fffdd2cc4a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1fffdd2cc4b0: 00 00 00 00 f1 f1 f1 f1 00 00 00 00 00 00 00 00
  0x1fffdd2cc4c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1fffdd2cc4d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1fffdd2cc4e0: 00 00 00 00 00 00 00 00 00 00 f3[f3]f3 f3 f3 f3
  0x1fffdd2cc4f0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x1fffdd2cc500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1fffdd2cc510: 00 00 00 00 f1 f1 f1 f1 00 00 00 f3 f3 f3 f3 f3
  0x1fffdd2cc520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1fffdd2cc530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==6465==ABORTING
